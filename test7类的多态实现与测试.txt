实验 07 类的多态实现与测试
1、实验目的 
类的多态有多种体现方式，比较多的是在程序运行期间，根据类的引
用关系，自动寻找匹配的方法，参考下面的案例内容。
分析下面代码的实现过程，尝试使用内存分布图分析代码的执行过程。
2、实验内容： 
(1)编写应用程序，具体要求如下：
① 声明一个抽象类 Pet，封装属性 name 和 sex，声明一个带有两
个参数的构造函数，声明抽象方法 void talk()和 void eat()；
② 声明一个 Dog 类继承自 Pet，封装属性 color，声明带有三个
参数的构造函数，重写 talk()和 eat()方法；
③ 声明一个 Cat 类继承自 Pet，封装属性 weight，声明带有三个
参数的构造函数，重写 talk()和 eat()方法；
④ 编写测试类，通过有参构造函数实例化 Dog 类对象，调用 talk()
方法和 eat()方法；通过有参构造函数实例化 Cat 类对象，调
用 talk()方法和 eat()方法；
(2) 按照要求编写一个 Java 应用程序：
① 定义一个抽象类 Person，包含抽象方法 eat()，封装属性 name、
sex、age，声明包含三个参数的构造方法；
② 定义一个 Chinese 类，继承自 Person 类，重写父类的 eat()
方法，并定义一个自己特有的方法 shadowBoxing()；
③ 定义一个 English 类，继承自 Person 类，重写父类的 eat()
方法，并定义一个自己特有的方法 horseRiding()；
编写测试类，定义一个 showEat()方法，使用父类作为方法的形参，
实现多态，分别调用 showEat()方法，通过强制类型转换调用各自类
特有的方法.
